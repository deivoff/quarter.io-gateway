{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"tslib\"","webpack:///external \"type-graphql\"","webpack:///./src/components/user/index.ts","webpack:///external \"path\"","webpack:///external \"sequelize-typescript\"","webpack:///./src/components/user/user.model.ts","webpack:///external \"bcrypt\"","webpack:///external \"jsonwebtoken\"","webpack:///./src/components/auth/auth.type.ts","webpack:///./src/index.ts","webpack:///external \"http\"","webpack:///./src/app.ts","webpack:///external \"reflect-metadata\"","webpack:///external \"koa\"","webpack:///external \"koa-router\"","webpack:///external \"koa-logger\"","webpack:///external \"apollo-server-koa\"","webpack:///external \"@koa/cors\"","webpack:///external \"koa-bodyparser\"","webpack:///./src/components/user/user.resolver.ts","webpack:///./src/components/user/user.inputs.ts","webpack:///./src/components/auth/index.ts","webpack:///./src/components/auth/auth.resolver.ts","webpack:///./src/middleware/auth.ts","webpack:///external \"dotenv\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","require","User","Model","PrimaryKey","Field","Default","DataType","UUIDV4","Column","UUID","description","Unique","CreatedAt","Date","UpdatedAt","ObjectType","Table","AuthData","ID","Int","PORT","process","env","createApp","then","app","createServer","callback","listen","console","log","catch","err","error","exit","async","router","Sequelize","DB_NAME","DB_USER","DB_PASSWORD","dialect","models","host","DB_URL","sync","schema","buildSchema","resolvers","AuthResolver","UserResolver","emitSchemaFile","validate","use","origin","credentials","ctx","next","set","method","status","isAuth","server","ApolloServer","context","playground","introspection","routes","allowedMethods","applyMiddleware","path","email","password","familyName","fatherName","givenName","findOne","where","Error","hashedPassword","bcrypt","hash","user","save","findAll","Mutation","returns","Arg","type","UserInput","Query","Resolver","of","InputType","compare","token","jwt","sign","_id","id","expiresIn","tokenExpiration","config","join","__dirname","authHeader","header","authorization","state","split","decodedToken","verify","SECRET_KEY","decodedUser","checkAuth"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","module.exports = require(\"tslib\");","module.exports = require(\"type-graphql\");","export * from './user.model';\nexport * from './user.resolver';\nexport * from './user.inputs';\n","module.exports = require(\"path\");","module.exports = require(\"sequelize-typescript\");","import {\n  Column,\n  CreatedAt,\n  DataType,\n  Default,\n  Model,\n  PrimaryKey,\n  Table,\n  Unique,\n  UpdatedAt,\n} from 'sequelize-typescript';\nimport { Field, ObjectType } from 'type-graphql';\n\n@ObjectType()\n@Table\nexport class User extends Model<User> {\n  @PrimaryKey\n  @Field()\n  @Default(DataType.UUIDV4)\n  @Column(DataType.UUID)\n  public id!: string;\n\n  @Field({ description: 'Email of the user.' })\n  @Unique\n  @Column\n  public email!: string;\n\n  @Field()\n  @Column\n  public givenName!: string;\n\n  @Field()\n  @Column\n  public familyName!: string;\n\n  @Field()\n  @Column\n  public fatherName!: string;\n\n  @Field()\n  @Column\n  public password!: string;\n\n  @Field()\n  @CreatedAt\n  public createdAt!: Date;\n\n  @Field()\n  @UpdatedAt\n  public updatedAt!: Date;\n}\n","module.exports = require(\"bcrypt\");","module.exports = require(\"jsonwebtoken\");","import { ID, Int, ObjectType, Field } from 'type-graphql';\n\n@ObjectType()\nexport class AuthData {\n  @Field(() => ID)\n  _id!: string;\n\n  @Field()\n  token!: string;\n\n  @Field(() => Int)\n  tokenExpiration!: number;\n}\n\nexport interface DecodedToken {\n  id: string;\n  email: string;\n  givenName: string;\n  familyName: string;\n  fatherName: string;\n  exp: number;\n}\n","import http from 'http';\n\nimport { createApp } from './app';\n\nconst PORT = process.env.PORT || 7000;\n\ncreateApp()\n  .then((app: any) => http.createServer(app.callback()).listen(PORT))\n  .then(() => console.log(`App listening at port: ${PORT}`))\n  .catch((err: Error) => {\n    console.error(err);\n    process.exit(1);\n  });\n","module.exports = require(\"http\");","import 'reflect-metadata';\nimport path from 'path';\nimport Koa from 'koa';\nimport KoaRouter from 'koa-router';\nimport logger from 'koa-logger';\nimport { ApolloServer } from 'apollo-server-koa';\nimport { Sequelize } from 'sequelize-typescript';\nimport { buildSchema } from 'type-graphql';\nimport cors from '@koa/cors';\nimport bodyParser from 'koa-bodyparser';\nimport { User, UserResolver } from '$components/user';\nimport { AuthResolver } from '$components/auth';\n\nimport { isAuth } from '$middleware/auth';\nimport { Context } from '$types/index';\n\nconst config = process.env.NODE_ENV === 'development' && require('dotenv').config({ path: path.join(`${__dirname}./../.env`) });\n\nexport const createApp = async () => {\n  const app = new Koa();\n  const router = new KoaRouter();\n  const sequelize = new Sequelize(\n    process.env.DB_NAME!,\n    process.env.DB_USER!,\n    process.env.DB_PASSWORD!,{\n    dialect: \"mysql\",\n    models: [\n      User\n    ],\n    host: process.env.DB_URL || '',\n  });\n\n  sequelize.sync();\n\n  const schema = await buildSchema({\n    resolvers: [\n      AuthResolver,\n      UserResolver,\n    ],\n    emitSchemaFile: true,\n    validate: false,\n  });\n\n  //\n\n  app.use(\n    cors({\n      origin: '*',\n      credentials: true,\n    }),\n  );\n  app.use(bodyParser());\n  app.use(async (ctx, next) => {\n    ctx.set(\n      'Access-Control-Allow-Headers',\n      'Origin, X-Requested-With, Content-Type, Accept, X-Requested-With, x-access-token',\n    );\n    ctx.set('Access-Control-Allow-Methods', 'POST, GET, PUT, DELETE, OPTIONS');\n\n    if (ctx.method === 'OPTIONS') {\n      return (ctx.status = 200);\n    }\n\n    await next();\n  });\n  app.use(logger());\n  app.use(isAuth);\n\n  const server = new ApolloServer({\n    schema,\n    context: (ctx: Context) => ctx,\n    playground: true, // process.env.NODE_ENV === 'development',\n    introspection: true,\n  });\n\n  app.use(router.routes());\n  app.use(router.allowedMethods());\n\n  server.applyMiddleware({ app, path: '/graphql' });\n\n  return app;\n};\n","module.exports = require(\"reflect-metadata\");","module.exports = require(\"koa\");","module.exports = require(\"koa-router\");","module.exports = require(\"koa-logger\");","module.exports = require(\"apollo-server-koa\");","module.exports = require(\"@koa/cors\");","module.exports = require(\"koa-bodyparser\");","import * as bcrypt from 'bcrypt';\nimport { User } from '$components/user/user.model';\nimport { Arg, Mutation, Query, Resolver } from 'type-graphql';\nimport { UserInput } from '.';\n\n@Resolver(of => User)\nexport class UserResolver {\n  @Mutation(returns => User)\n  async createUser(\n    @Arg('userInput', type => UserInput) {\n      email,\n      password,\n      familyName,\n      fatherName,\n      givenName\n    }: UserInput,\n  ): Promise<User> {\n    try {\n      const userInDatabase = await User.findOne({ where: { email } });\n      if (userInDatabase) {\n        throw new Error('User is already exist!');\n      }\n\n      const hashedPassword = await bcrypt.hash(password, 12);\n      const user = new User({\n        email,\n        familyName,\n        fatherName,\n        givenName,\n        password: hashedPassword,\n      });\n      return (await user.save());\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  @Query(returns => [User])\n  async getUsers(): Promise<User[]> {\n    try {\n      return await User.findAll();\n    } catch (error) {\n      throw error;\n    }\n  }\n}\n","import { InputType, Field } from 'type-graphql'\n\nimport { User } from './user.model'\n\n@InputType()\nexport class UserInput implements Partial<User> {\n  @Field()\n  email!: string;\n\n  @Field()\n  givenName!: string;\n\n  @Field()\n  familyName!: string;\n\n  @Field()\n  fatherName!: string;\n\n  @Field()\n  password!: string;\n}\n","export * from './auth.resolver';\nexport * from './auth.type';\n","import * as bcrypt from 'bcrypt';\nimport * as jwt from 'jsonwebtoken';\nimport { AuthData } from './auth.type';\nimport { Resolver, Query, Arg } from 'type-graphql'\nimport { User } from '../user';\n\n@Resolver(of => AuthData)\nexport class AuthResolver {\n  @Query(returns => AuthData)\n  async login(\n    @Arg('email') email: string,\n    @Arg('password') password: string,\n  ): Promise<AuthData> {\n    try {\n      const user = await User.findOne({ where: { email } });\n      if (!user) {\n        throw new Error('User is not exist!');\n      }\n\n      const isEqual = await bcrypt.compare(password, user.password);\n      if (!isEqual) {\n        throw new Error('Password is incorrect!');\n      }\n\n      const token = jwt.sign({\n        _id: user.id,\n        email,\n        familyName: user.familyName,\n        givenName: user.givenName,\n        fatherName: user.fatherName\n      }, 'somebody', {\n        expiresIn: '1h',\n      });\n\n      return {\n        _id: user.id,\n        token,\n        tokenExpiration: 1,\n      };\n    } catch (error) {\n      throw error;\n    }\n  }\n}\n","import path from 'path';\nimport * as jwt from 'jsonwebtoken';\nimport { Context } from '$types/index';\nimport { DecodedToken } from '$components/auth';\n\nrequire('dotenv').config({ path: path.join(`${__dirname}./../../../.env`) });\n\nexport const isAuth = async (ctx: Context, next: () => Promise<any>) => {\n  const authHeader = ctx.header.authorization;\n  if (!authHeader) {\n    ctx.state.isAuth = false;\n    return await next();\n  }\n\n  const token = authHeader.split(' ')[1];\n  if (!token || token === '') {\n    ctx.state.isAuth = false;\n    return await next();\n  }\n  let decodedToken: string | object;\n  try {\n    decodedToken = jwt.verify(token, process.env.SECRET_KEY!);\n  } catch {\n    ctx.state.isAuth = false;\n    return await next();\n  }\n\n  if (!decodedToken) {\n    ctx.state.isAuth = false;\n    return await next();\n  }\n\n  ctx.state.isAuth = true;\n  ctx.state.decodedUser = decodedToken as DecodedToken;\n  return await next();\n};\n\nexport const checkAuth = (ctx: Context) => {\n  if (!ctx.state.isAuth) {\n    throw new Error('Unauthenticated');\n  }\n};\n","module.exports = require(\"dotenv\");"],"sourceRoot":""}